---
swagger: "2.0"
info:
  description: "This is a simple Cat Information Center Api"
  version: "1.0.0"
  title: "OpenAPI Cat Information Service"
tags:
- name: "cat"
  description: "Everything about your Cats"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /cats:
    get:
      tags:
      - "cat"
      summary: "Retrieves the list of all cats"
      description: "Retrieves the list of all cats"
      operationId: "list_cats"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Successfully listed"
          schema:
            $ref: "#/definitions/CatsResponse"
      x-swagger-router-controller: "swagger_server.controllers.cat_controller"
    post:
      tags:
      - "cat"
      summary: "Add a new cat to the store"
      description: "Creates a new cat in the store"
      operationId: "add_cat"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Cat object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Cat"
      responses:
        "201":
          description: "Successfully created"
          schema:
            $ref: "#/definitions/Cat"
        "400":
          description: "Bad request"
      x-swagger-router-controller: "swagger_server.controllers.cat_controller"
  /cats/{cat_id}:
    get:
      tags:
      - "cat"
      summary: "Retrieve a single cat"
      description: "Retrieve a single cat"
      operationId: "get_cat"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "cat_id"
        in: "path"
        description: "Id of the cat desired to be retrieved"
        required: true
        type: "string"
      responses:
        "200":
          description: "Succesful retrieval of cat"
          schema:
            $ref: "#/definitions/Cat"
        "400":
          description: "Bad request"
        "404":
          description: "Cat not found"
      x-swagger-router-controller: "swagger_server.controllers.cat_controller"
    put:
      tags:
      - "cat"
      summary: "Update an existing cat"
      description: ""
      operationId: "update_cat"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "cat_id"
        in: "path"
        description: "Id of the cat desired to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Cat object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Cat"
      responses:
        "201":
          description: "Succesful update of cat"
          schema:
            $ref: "#/definitions/Cat"
        "400":
          description: "Bad request"
        "404":
          description: "Cat not found"
      x-swagger-router-controller: "swagger_server.controllers.cat_controller"
    delete:
      tags:
      - "cat"
      summary: "Delete a cat"
      description: "Delete a cat"
      operationId: "delete_cat"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "cat_id"
        in: "path"
        description: "Id of the cat desired to be deleted"
        required: true
        type: "string"
      responses:
        "204":
          description: "Succesful delete of cat"
        "400":
          description: "Bad request"
        "404":
          description: "Cat not found"
      x-swagger-router-controller: "swagger_server.controllers.cat_controller"
definitions:
  Cat:
    required:
    - "breed"
    - "name"
    properties:
      id:
        type: "string"
      name:
        type: "string"
        example: "Garfield"
        description: "Name of the cat"
      breed:
        type: "string"
        description: "Breed of the cat"
        enum:
        - "Abyssinian"
        - "Aegean"
        - "American Bobtail"
        - "American Curl"
        - "American Shorthair"
        - "American Wirehair"
        - "Arabian Mau"
        - "Australian Mist"
        - "Balinese"
        - "Bambino"
        - "Bengal"
        - "Birman"
        - "Bombay"
        - "British Longhair"
        - "British Shorthair"
        - "Burmese"
        - "Burmilla"
        - "California Spangled"
        - "Chantilly-Tiffany"
        - "Chartreux"
        - "Chausie"
        - "Cheetoh"
        - "Colorpoint Shorthair"
        - "Cornish Rex"
        - "Cymric"
        - "Cyprus"
        - "Devon Rex"
        - "Donskoy"
        - "Dragon Li"
        - "Egyptian Mau"
        - "European Burmese"
        - "Exotic Shorthair"
        - "Havana Brown"
        - "Himalayan"
        - "Japanese Bobtail"
        - "Javanese"
        - "Khao Manee"
        - "Korat"
        - "Kurilian"
        - "LaPerm"
        - "Maine Coon"
        - "Malayan"
        - "Manx"
        - "Munchkin"
        - "Nebelung"
        - "Norwegian Forest Cat"
        - "Ocicat"
        - "Oriental"
        - "Persian"
        - "Pixie-bob"
        - "Ragamuffin"
        - "Ragdoll"
        - "Russian Blue"
        - "Savannah"
        - "Scottish Fold"
        - "Selkirk Rex"
        - "Siamese"
        - "Siberian"
        - "Singapura"
        - "Snowshoe"
        - "Somali"
        - "Sphynx"
        - "Tonkinese"
        - "Toyger"
        - "Turkish Angora"
        - "Turkish Van"
        - "York Chocolate"
    title: "Cat"
    description: "A cat"
    example:
      name: "Garfield"
      id: "id"
      breed: "Abyssinian"
  CatsResponse:
    type: "object"
    properties:
      cats:
        type: "array"
        description: "List of cats"
        items:
          $ref: "#/definitions/Cat"
    description: "Response object contains all the cats"
    example:
      cats:
      - name: "Garfield"
        id: "id"
        breed: "Abyssinian"
      - name: "Garfield"
        id: "id"
        breed: "Abyssinian"
